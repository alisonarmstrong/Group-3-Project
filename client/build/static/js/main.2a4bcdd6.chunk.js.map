{"version":3,"sources":["utils/Constants.js","reducers/PhotosListReducer.js","reducers/UploadedPhotosReducer.js","utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/Results.js","pages/SearchPhotos.js","utils/queries.js","pages/savedImage/img11.jpg","pages/savedImage/img12.jpg","pages/savedImage/img13.jpg","pages/savedImage/img14.jpg","pages/savedImage/img15.jpg","pages/savedImage/img16.jpg","pages/savedImage/img17.jpg","pages/savedImage/img18.jpg","pages/savedImage/img19.jpg","pages/Saved.js","pages/SavedPhotos.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","config/config.js","actions/index.js","utils/CloudinaryService.js","pages/profile/Photo.js","pages/profile/Header.js","pages/profile/avatar2.png","pages/profile/AvatarBio.js","pages/profile/PhotoList.js","pages/profile/UploadedPhotosStatus.js","pages/profile/PhotosUploader.js","pages/profile/profile.js","pages/home/street.jpg","pages/home/crowd.jpg","pages/home/field.jpg","pages/home/donkey.jpg","pages/home/home.js","components/footer.js","components/Payment.js","App.js","index.js"],"names":["PHOTOS_FETCHED","PHOTOS_UPLOADED","DELETE_UPLOADED_PHOTO","UPDATE_UPLOADED_PHOTO","PhotosListReducer","photos","action","type","filter","photo","public_id","publicId","UploadedPhotosReducer","uploadedPhotos","photoIndex","updatedPhotos","map","index","id","uploadedPhoto","findIndex","current","response","body","slice","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","removePhotoId","photoId","savedPhotoIds","JSON","parse","updatedSavedPhotoIds","savedPhotoId","stringify","LOGIN_USER","gql","ADD_USER","SAVE_PHOTO","REMOVE_PHOTO","Results","SearchPhotos","useState","searchResult","setResult","setPhoto","clientId","setSavedPhotoIds","useMutation","savePhoto","useEffect","photoIdArr","length","handleFormSubmit","event","a","preventDefault","console","log","url","axios","get","then","data","results","photoData","authors","user","name","title","description","alt_description","image","urls","full","error","handleSavePhoto","photoToSave","find","Auth","loggedIn","variables","Container","Form","onSubmit","Row","Col","xs","md","Control","value","onChange","target","size","placeholder","CardColumns","Card","border","Img","src","alt","variant","Body","Title","className","username","Text","Button","disabled","some","onClick","GET_ME","Saved","pic1","pic2","pic3","pic4","pic5","pic6","pic7","pic8","pic9","SavedPhotos","useQuery","loading","removePhoto","userData","me","handleDeletePhoto","savedPhotos","SignupForm","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","fluid","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","photosUploaded","options","scOptions","Util","withSnakeCaseKeys","CoreCloudinary","new","e","Photo","props","state","showMore","context","urlPath","custom","href","rel","width","height","crop","quality","fetchFormat","setState","Component","contextType","CloudinaryContext","AvatarBio","avatar1","PhotoList","uploadImageWithCloudinary","bind","callback","uploadOptions","tags","result","info","onPhotosUploaded","cloudinary","openUploadWidget","PhotoListContainer","connect","UploadedPhotoStatus","percent","Math","floor","progress","fileName","delete_token","deletePhoto","status","role","style","Object","keys","key","request","post","cloudName","set","send","onDeletePhoto","onDeleteUploadedPhoto","UploadedPhotoStatusContainer","PhotosUploader","disableClick","multiple","accept","position","onDrop","onPhotoSelected","path","ref","titleEl","fileInputEl","files","exact","file","field","uploadPreset","on","onPhotoUploadProgress","end","onPhotoUploaded","onUpdateUploadedPhoto","PhotosUploaderContainer","App","format","version","ceil","getTime","fetch","res","text","resources","fetchPhotos","onPhotosFetched","component","from","AppContainer","Home","Footer","CheckoutForm","handleSubmit","stripe","elements","card","getElement","CardElement","createPaymentMethod","paymentMethod","base","fontSize","color","invalid","React","InjectedCheckoutForm","stripePromise","loadStripe","Payment","cloud_name","config","upload_preset","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","render","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a4bcdd6.chunk.js","sourcesContent":["export const PHOTOS_FETCHED = 'PHOTOS_FETCHED';\nexport const PHOTOS_UPLOADED = 'PHOTOS_UPLOADED';\nexport const DELETE_UPLOADED_PHOTO = 'DELETE_UPLOADED_PHOTO';\nexport const UPDATE_UPLOADED_PHOTO = 'UPDATE_UPLOADED_PHOTO';\n","import {\n  PHOTOS_FETCHED,\n  PHOTOS_UPLOADED,\n  DELETE_UPLOADED_PHOTO,\n} from \"../utils/Constants\";\n\nconst PhotosListReducer = (photos = [], action) => {\n  switch (action.type) {\n    case PHOTOS_FETCHED:\n      return [...action.photos];\n    case PHOTOS_UPLOADED: {\n      return [...action.photos, ...photos];\n    }\n    case DELETE_UPLOADED_PHOTO:\n      return photos.filter((photo) => photo.public_id !== action.publicId);\n    default:\n      return [...photos];\n  }\n};\n\nexport default PhotosListReducer;\n","import {\n  UPDATE_UPLOADED_PHOTO,\n  DELETE_UPLOADED_PHOTO,\n} from \"../utils/Constants\";\n\nconst UploadedPhotosReducer = (uploadedPhotos = [], action) => {\n  switch (action.type) {\n    case UPDATE_UPLOADED_PHOTO: {\n      let photoIndex = -1;\n      const updatedPhotos = uploadedPhotos.map((photo, index) => {\n        if (photo.id === action.uploadedPhoto.id) {\n          photoIndex = index;\n          return { ...photo, ...action.uploadedPhoto };\n        }\n\n        return photo;\n      });\n\n      return photoIndex !== -1\n        ? updatedPhotos\n        : [action.uploadedPhoto, ...uploadedPhotos];\n    }\n    case DELETE_UPLOADED_PHOTO: {\n      const index = uploadedPhotos.findIndex(\n        (current) => current.response.body.public_id === action.publicId\n      );\n      return [\n        ...uploadedPhotos.slice(0, index),\n        ...uploadedPhotos.slice(index + 1),\n      ];\n    }\n    default:\n      return [...uploadedPhotos];\n  }\n};\n\nexport default UploadedPhotosReducer;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export const getSavedPhotoIds = () => {\n  const savedPhotoIds = localStorage.getItem('saved_photos')\n    ? JSON.parse(localStorage.getItem('saved_photos'))\n    : [];\n\n  return savedPhotoIds;\n};\n\nexport const savePhotoIds = (photoIdArr) => {\n  if (photoIdArr.length) {\n    localStorage.setItem('saved_photos', JSON.stringify(photoIdArr));\n  } else {\n    localStorage.removeItem('saved_photos');\n  }\n};\n\nexport const removePhotoId = (photoId) => {\n  const savedPhotoIds = localStorage.getItem('saved_photos')\n    ? JSON.parse(localStorage.getItem('saved_photos'))\n    : null;\n\n  if (!savedPhotoIds) {\n    return false;\n  }\n\n  const updatedSavedPhotoIds = savedPhotoIds?.filter((savedPhotoId) => savedPhotoId !== photoId);\n  localStorage.setItem('saved_photos', JSON.stringify(updatedSavedPhotoIds));\n\n  return true;\n};\n","import { gql } from '@apollo/client';\n\n\nexport const LOGIN_USER = gql`\n  mutation loginUser($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\nmutation addUser($username: String!, $password: String!, $email: String!) {\n  addUser(username: $username, password: $password, email: $email) {\n    \n    user {\n      _id\n      username\n      email\n      photoCount\n      savedPhoto {\n        authors\n        photoId\n        image\n        link\n        title\n        description\n      }\n    }\n    token\n  }\n}\n`;\n\nexport const SAVE_PHOTO = gql`\n  mutation savePhoto($photoData: PhotoInput!) {\n    savePhoto(photoData: $photoData) {\n      _id\n      username\n      email\n      savedPhoto {\n        photoId\n        authors\n        image\n        description\n        title\n        link\n      }\n    }\n  }\n`;\n\nexport const REMOVE_PHOTO = gql`\n  mutation removePhoto($photoId: ID!) {\n    removePhoto(photoId: $photoId) {\n      _id\n      username\n      email\n      savedPhoto {\n        photoId\n        authors\n        image\n        description\n        title\n        link\n      }\n    }\n  }\n`;","import React from \"react\";\nimport \"./resultStyles.css\";\n// import pic1 from \"../pages/searchimage/img1.jpg\";\n// import pic2 from \"../pages/searchimage/img2.jpg\";\n// import pic3 from \"../pages/searchimage/img3.jpg\";\n// import pic4 from \"../pages/searchimage/img4.jpg\";\n// import pic5 from \"../pages/searchimage/img5.jpg\";\n// import pic6 from \"../pages/searchimage/img6.jpg\";\n// import pic7 from \"../pages/searchimage/img7.jpg\";\n\nfunction Results() {\n  return (\n    <div className=\"container\">\n      <h1>Photo Search</h1>\n      <div className=\"searchContainer\">\n        <input className=\"search\" type=\"text\" placeholder=\"Search..\"></input>\n        <button type=\"submit\">\n          <i class=\"fa fa-search\"></i>\n        </button>\n      </div>\n\n      <div className=\"results\">\n        <div className=\"text\">Results</div>\n        {/* <div className=\"picContainer\">\n          <img src={pic1} />\n          <img src={pic2} />\n          <img src={pic3} />\n          <img src={pic4} />\n          <img src={pic5} />\n          <img src={pic6} />\n          <img src={pic7} />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Col,\n  Form,\n  Button,\n  Card,\n  CardColumns,\n} from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\nimport { savePhotoIds, getSavedPhotoIds } from \"../utils/localStorage\";\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_PHOTO } from \"../utils/mutations\";\nimport axios from \"axios\";\n\nimport \"./resultStyles.css\";\nimport Results from \"./Results\";\n\nconst SearchPhotos = () => {\n  // create state for holding returned google api data\n  // const [result, setresult] = useState([]);\n  const [searchResult, setResult] = useState([]);\n  // create state for holding our search field data\n  // const [searchInput, setSearchInput] = useState('');\n  const [photo, setPhoto] = useState(\"\");\n\n  const [clientId, setClientID] = useState(\n    \"aczCYkM2vBISaUTNddlmnXpXV8_2TYD5fAzxm_23vNM\"\n  );\n\n  // create state to hold saved photoId values\n  const [savedPhotoIds, setSavedPhotoIds] = useState(getSavedPhotoIds());\n\n  const [savePhoto] = useMutation(SAVE_PHOTO);\n\n  // set up useEffect hook to save `savedphotoIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => savePhotoIds(savedPhotoIds);\n  });\n\n  // create method to search for photos and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!photo) {\n      return false;\n    }\n    console.log(photo);\n\n    try {\n      const url =\n        \"https://api.unsplash.com/search/photos?page=1&query=\" +\n        photo +\n        \"&client_id=\" +\n        clientId;\n      axios.get(url).then((response) => {\n        console.log(response);\n        setResult(response.data.results);\n      });\n\n      // if (!url.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // const { items } = await url.json();\n\n      const photoData = searchResult.map((photo) => ({\n        photoId: photo.id,\n        authors: photo.user.name || [\"No Photographer to display\"],\n        title: photo.description,\n        description: photo.alt_description || [\"No description\"],\n        image: photo.urls.full || \"\",\n      }));\n\n      console.log(photoData);\n      setResult(photoData);\n      setPhoto(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a photo to our database\n  const handleSavePhoto = async (photoId) => {\n    // find the photo in `result` state by the matching id\n    const photoToSave = searchResult.find((photo) => photo.photoId === photoId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await savePhoto({\n        variables: { photoData: { ...photoToSave } },\n      });\n      console.log(\"data:\", data);\n      console.log(savedPhotoIds);\n      setSavedPhotoIds([...savedPhotoIds, photoToSave.photoId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <h1>Photo Search</h1>\n        <Form onSubmit={handleFormSubmit}>\n          <Form.Row>\n            <Col xs={12} md={8}>\n              <Form.Control\n                name=\"photo\"\n                value={photo}\n                onChange={(event) => setPhoto(event.target.value)}\n                type=\"text\"\n                size=\"lg\"\n                placeholder=\"Search\"\n              />\n            </Col>\n            <Col xs={12} md={4}>\n              {/* <Button type=\"submit\">Submit Search</Button> */}\n            </Col>\n          </Form.Row>\n        </Form>\n      </Container>\n\n      <Container>\n        <h2>\n          {searchResult.length\n            ? `Viewing ${searchResult.length} results:`\n            : \"Results\"}\n        </h2>\n        {/* <div className=\"resultContainer\">\n          <Results />\n        </div> */}\n        <CardColumns>\n          {searchResult.map((photo) => {\n            return (\n              <Card key={photo.id} border=\"dark\">\n                {photo.urls.full ? (\n                  <Card.Img\n                    src={photo.urls.full}\n                    alt={`The cover for ${photo.id}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{photo.description}</Card.Title>\n                  <p className=\"small\">Authors: {photo.user.username}</p>\n                  <Card.Text>{photo.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedPhotoIds?.some(\n                        (savedPhotoId) => savedPhotoId === photo.id\n                      )}\n                      className=\"btn-block btn-info\"\n                      onClick={() => handleSavePhoto(photo.id)}\n                    >\n                      {savedPhotoIds?.some(\n                        (savedPhotoId) => savedPhotoId === photo.id\n                      )\n                        ? \"This photo has already been saved!\"\n                        : \"Save this photo!\"}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchPhotos;\n","import { gql } from '@apollo/client';\n\nexport const GET_ME  = gql`\n    {\n        me {\n            _id\n            username\n            email\n            photoCount\n            savedPhotos {\n                photoId\n                authors\n                title\n                description\n                image\n                link\n            }\n        }\n    }\n`;","export default __webpack_public_path__ + \"static/media/img11.071baad8.jpg\";","export default __webpack_public_path__ + \"static/media/img12.5ce08668.jpg\";","export default __webpack_public_path__ + \"static/media/img13.7daf8aea.jpg\";","export default __webpack_public_path__ + \"static/media/img14.4ea2c308.jpg\";","export default __webpack_public_path__ + \"static/media/img15.28b31e31.jpg\";","export default __webpack_public_path__ + \"static/media/img16.a6461d0d.jpg\";","export default __webpack_public_path__ + \"static/media/img17.cbc77a4c.jpg\";","export default __webpack_public_path__ + \"static/media/img18.35bca809.jpg\";","export default __webpack_public_path__ + \"static/media/img19.4deb9ca5.jpg\";","import React from \"react\";\nimport \"./resultStyles.css\";\nimport pic1 from \"../pages/savedImage/img11.jpg\";\nimport pic2 from \"../pages/savedImage/img12.jpg\";\nimport pic3 from \"../pages/savedImage/img13.jpg\";\nimport pic4 from \"../pages/savedImage/img14.jpg\";\nimport pic5 from \"../pages/savedImage/img15.jpg\";\nimport pic6 from \"../pages/savedImage/img16.jpg\";\nimport pic7 from \"../pages/savedImage/img17.jpg\";\nimport pic8 from \"../pages/savedImage/img18.jpg\";\nimport pic9 from \"../pages/savedImage/img19.jpg\";\n\nfunction Saved() {\n  return (\n    <div className=\"contain\">\n      <div className=\"picContainer\">\n        <img src={pic1} />\n\n        <img src={pic2} />\n        <img src={pic3} />\n        <img src={pic4} />\n        <img src={pic5} />\n        <img src={pic6} />\n        <img src={pic7} />\n        <img src={pic8} />\n        <img src={pic9} />\n      </div>\n    </div>\n  );\n}\n\nexport default Saved;\n","import React from \"react\";\nimport { Container, CardColumns, Card, Button } from \"react-bootstrap\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_PHOTO } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport { removePhotoId } from \"../utils/localStorage\";\nimport Saved from \"../../src/pages/Saved\";\nimport \"./savedStyles.css\";\n\nconst SavedPhotos = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const [removePhoto] = useMutation(REMOVE_PHOTO);\n\n  const userData = data?.me || [];\n\n  // use this to determine if `useEffect()` hook needs to run again\n  // const userDataLength = Object.keys(userData).length;\n\n  // create function that accepts the photo's mongo _id value as param and deletes the photo from the database\n  const handleDeletePhoto = async (photoId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    console.log(photoId);\n    if (!token) {\n      return false;\n    }\n\n    try {\n      await removePhoto({\n        variables: { photoId },\n      });\n\n      // upon success, remove photo's id from localStorage\n      removePhotoId(photoId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>{userData.username}'s saved photos</h1>\n      </div>\n\n      <Container>\n        {/* <h2>\n          {userData.savedPhotos?.length\n            ? `Viewing ${userData.savedPhotos.length} saved ${\n                userData.savedPhotos.length === 1 ? \"photo\" : \"photos\"\n              }:`\n            : \"You have no saved photos!\"}\n        </h2> */}\n        <Saved />\n        <CardColumns>\n          {userData.savedPhotos?.map((photo) => {\n            return (\n              <Card key={photo.photoId} border=\"dark\">\n                {photo.image ? (\n                  <Card.Img\n                    src={photo.image}\n                    alt={`The cover for ${photo.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{photo.title}</Card.Title>\n                  <p className=\"small\">Authors: {photo.authors}</p>\n                  <Card.Text>{photo.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeletePhoto(photo.photoId)}\n                  >\n                    Delete this photo!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </div>\n  );\n};\n\nexport default SavedPhotos;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n      console.log(data);\n      Auth.login(data.addUser.token)\n     } catch (err) {\n        console.error(err);\n      }\n\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [login, {error}] = useMutation(LOGIN_USER)\n\n  useEffect (()=> {\n    if (error){\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);}\n    }, [error])\n  \n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n\n      console.log(data);\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container, Modal, Tab } from \"react-bootstrap\";\nimport SignUpForm from \"./SignupForm\";\nimport LoginForm from \"./LoginForm\";\n\nimport Auth from \"../utils/auth\";\n\nimport \"./navbar.css\";\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container fluid>\n          <Navbar.Brand as={Link} to=\"/\">\n            Home\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar\" />\n          <Navbar.Collapse id=\"navbar\">\n            <Nav className=\"ml-auto\">\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to=\"/search\">\n                    Search\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/saved\">\n                    Favorites\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/profile\">\n                    Profile\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>\n                  Login/Sign Up\n                </Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size=\"lg\"\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby=\"signup-modal\"\n      >\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey=\"login\">\n          <Modal.Header closeButton>\n            <Modal.Title id=\"signup-modal\">\n              <Nav variant=\"pills\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"login\">Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"signup\">Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"login\">\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"signup\">\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","export default {\n  cloud_name: \"proj3\",\n  upload_preset: \"default\",\n};\n","import {\n  PHOTOS_FETCHED,\n  PHOTOS_UPLOADED,\n  DELETE_UPLOADED_PHOTO,\n  UPDATE_UPLOADED_PHOTO,\n} from \"../utils/Constants\";\n\nexport const photosFetched = (photos) => ({\n  type: PHOTOS_FETCHED,\n  photos: photos,\n});\n\nexport const photosUploaded = (photos) => ({\n  type: PHOTOS_UPLOADED,\n  photos: photos,\n});\n\nexport const updateUploadedPhoto = (uploadedPhoto) => ({\n  type: UPDATE_UPLOADED_PHOTO,\n  uploadedPhoto: uploadedPhoto,\n});\n\nexport const deleteUploadedPhoto = (publicId) => ({\n  type: DELETE_UPLOADED_PHOTO,\n  publicId: publicId,\n});\n","import { Cloudinary as CoreCloudinary, Util } from \"cloudinary-core\";\n\nexport const url = (publicId, options) => {\n  try {\n    const scOptions = Util.withSnakeCaseKeys(options);\n    const cl = CoreCloudinary.new();\n    return cl.url(publicId, scOptions);\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n};\n\nexport const openUploadWidget = (options, callback) => {\n  window.cloudinary.openUploadWidget(options, callback);\n};\n\nexport const fetchPhotos = (cloudName) => {\n  // instead of maintaining the list of images, we rely on the 'myphotoalbum' tag\n  // and simply retrieve a list of all images with that tag.\n  // the version property is used for cache bust (lists are cached by the CDN for 1 minute)\n  // *************************************************************************\n  // Note that this practice is DISCOURAGED in production code and is here\n  // for demonstration purposes only\n  // *************************************************************************\n  const options = {\n    cloudName: cloudName,\n    format: \"json\",\n    type: \"list\",\n    version: Math.ceil(new Date().getTime() / 1000),\n  };\n\n  const urlPath = url(\"myphotoalbum\", options);\n\n  return fetch(urlPath)\n    .then((res) => res.text())\n    .then((text) => (text ? JSON.parse(text).resources : []));\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Image, Transformation } from \"cloudinary-react\";\nimport { url } from \"../../utils/CloudinaryService\";\nimport { CloudinaryContext } from \"cloudinary-react\";\n// import PhotoThumbnails from \"./PhotoThumbnails\";\nimport \"./styles.css\";\nclass Photo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { showMore: false };\n  }\n\n  render() {\n    const options = { ...this.context, ...this.props };\n    const urlPath = url(options.publicId, options);\n\n    return (\n      <div className=\"photo\">\n        {this.props.context && <h2>{this.props.context.custom.photo}</h2>}\n        <a href={urlPath} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Image\n            publicId={this.props.publicId}\n            className=\"thumbnail inline\"\n            width=\"150\"\n            height=\"150\"\n            crop=\"fit\"\n            quality=\"80\"\n          >\n            <Transformation quality=\"auto\" fetchFormat=\"auto\" />\n          </Image>\n        </a>\n        <div id=\"buttons\">\n          <h3>Remark</h3>\n          <h3>Edit</h3>\n        </div>\n      </div>\n    );\n  }\n\n  showMore() {\n    this.setState({ showMore: true });\n  }\n\n  showLess() {\n    this.setState({ showMore: false });\n  }\n\n  static contextType = CloudinaryContext.contextType;\n}\n\nPhoto.propTypes = {\n  context: PropTypes.object,\n  publicId: PropTypes.string,\n};\n\nexport default Photo;\n","import React from \"react\";\nimport \"./styles.css\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ME } from \"../../utils/queries\";\nimport \"./styles.css\";\n\nconst Header = () => {\n  const { data } = useQuery(GET_ME);\n  const userData = data?.me || [];\n\n  return (\n    <>\n      <div>\n        <div className=\"header\">\n          <h1>{userData.username}'s Gallery</h1>\n          <div id=\"userlog\"></div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/avatar2.fee3ecd8.png\";","import React from \"react\";\nimport avatar1 from \"./avatar2.png\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { GET_ME } from \"../../utils/queries\";\n\nconst AvatarBio = () => {\n  const { data } = useQuery(GET_ME);\n  const userData = data?.me || [];\n\n  return (\n    <div id=\"bio\">\n      <div id=\"avatar\">\n        <img src={avatar1} alt=\"avatar\" />\n      </div>\n      <div id=\"text\">\n        <h2>Bio</h2>\n        <h3>\n          Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil\n          impedit quo minus id quod maxime placeat facere possimus, omnis\n          voluptas assumenda est, omnis dolor repellendus.\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default AvatarBio;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { openUploadWidget } from \"../../utils/CloudinaryService\";\nimport { photosUploaded } from \"../../actions\";\nimport Photo from \"./Photo\";\n// import Userdashboard from \"./Userdashboard\";\nimport Header from \"./Header\";\nimport { CloudinaryContext } from \"cloudinary-react\";\nimport AvatarBio from \"./AvatarBio\";\nimport \"./styles.css\";\n\nclass PhotoList extends Component {\n  render() {\n    return (\n      <div>\n        {\" \"}\n        <Header />\n        <div className=\"container\">\n          <div className=\"photoList\">\n            <div id=\"Userdashboard\">\n              <div className=\"actions\">\n                <button\n                  className=\"upload_link\"\n                  onClick={this.uploadImageWithCloudinary.bind(this)}\n                >\n                  <h2>Upload</h2>\n                </button>\n              </div>\n              {/* <Userdashboard /> */}\n            </div>\n            <div className=\"photos\">\n              {this.props.photos.length === 0 && (\n                <p>No photos were added yet.</p>\n              )}\n              {this.props.photos.map((photo) => {\n                return (\n                  <Photo key={photo.public_id} publicId={photo.public_id} />\n                );\n              })}\n            </div>\n            <AvatarBio />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  uploadImageWithCloudinary() {\n    const uploadOptions = { tags: [\"myphotoalbum\"], ...this.context };\n    console.log(uploadOptions);\n\n    openUploadWidget(uploadOptions, (error, result) => {\n      if (!error) {\n        const { event, info } = result;\n        if (event === \"success\") {\n          this.props.onPhotosUploaded([info]);\n        }\n      } else {\n        console.log(error);\n      }\n    });\n  }\n}\n\nPhotoList.contextType = CloudinaryContext.contextType;\n\nPhotoList.propTypes = {\n  photos: PropTypes.array,\n  onPhotosUploaded: PropTypes.func,\n};\n\nconst PhotoListContainer = connect((state) => ({ photos: state.photos }), {\n  onPhotosUploaded: photosUploaded,\n})(PhotoList);\n\nexport default PhotoListContainer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport request from \"superagent\";\nimport { deleteUploadedPhoto } from \"../../actions\";\nimport { CloudinaryContext } from \"cloudinary-react\";\n\nclass UploadedPhotoStatus extends Component {\n  render() {\n    const uploadedPhoto = this.props.uploadedPhoto;\n    const response = uploadedPhoto.response;\n    const data = response && response.body;\n    const percent = Math.floor(uploadedPhoto.progress.percent);\n    return (\n      <div>\n        <h3>{uploadedPhoto.fileName}</h3>\n        {data && data.delete_token && (\n          <button\n            className=\"delete-image\"\n            onClick={this.deletePhoto.bind(this)}\n          >\n            Delete image\n          </button>\n        )}\n        <div className=\"status\">\n          {!response && <div>Uploading... {percent}%</div>}\n          {!response && <div>In progress</div>}\n          {response && (\n            <div className=\"status-code\">\n              Upload completed with status code {response.status}\n            </div>\n          )}\n        </div>\n        <div className=\"progress-bar\">\n          <div\n            className=\"progress\"\n            role=\"progressbar\"\n            style={{ width: percent + \"%\" }}\n          />\n        </div>\n        {data && (\n          <div className=\"info\">\n            <table>\n              <tbody>\n                {Object.keys(data).map((key) => {\n                  return (\n                    <tr key={key}>\n                      <td>{key}</td>\n                      <td>{JSON.stringify(data[key])}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  deletePhoto() {\n    request\n      .post(\n        `https://api.cloudinary.com/v1_1/${this.context.cloudName}/delete_by_token`\n      )\n      .set(\"Content-Type\", \"application/json\")\n      .set(\"X-Requested-With\", \"XMLHttpRequest\")\n      .send({\n        token: this.props.uploadedPhoto.response.body.delete_token,\n      })\n      .then(this.onDeletePhoto.bind(this));\n  }\n\n  onDeletePhoto() {\n    this.props.onDeleteUploadedPhoto(\n      this.props.uploadedPhoto.response.body.public_id\n    );\n  }\n\n  static contextType = CloudinaryContext.contextType;\n}\n\nUploadedPhotoStatus.propTypes = {\n  uploadedPhoto: PropTypes.object,\n  onDeleteUploadedPhoto: PropTypes.func,\n};\n\nconst UploadedPhotoStatusContainer = connect((state) => state, {\n  onDeleteUploadedPhoto: deleteUploadedPhoto,\n})(UploadedPhotoStatus);\n\nexport default UploadedPhotoStatusContainer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport request from \"superagent\";\nimport Dropzone from \"react-dropzone\";\nimport { photosUploaded, updateUploadedPhoto } from \"../../actions\";\nimport UploadedPhotoStatusContainer from \"./UploadedPhotosStatus\";\nimport { CloudinaryContext } from \"cloudinary-react\";\n\nclass PhotosUploader extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = { uploadedPhotos: [] };\n    this.photoId = 1;\n  }\n\n  render() {\n    return (\n      <div>\n        <Dropzone\n          id=\"direct-upload-dropzone\"\n          disableClick={true}\n          multiple={false}\n          accept=\"image/*\"\n          style={{ position: \"relative\" }}\n          onDrop={this.onPhotoSelected.bind(this)}\n        >\n          <div id=\"direct_upload\">\n            <h1>New Photo</h1>\n            <h2>Direct upload from the browser with React File Upload</h2>\n            <p>\n              You can also drag and drop an image file into the dashed area.\n            </p>\n            <form>\n              <div className=\"form_line\">\n                <label path=\"title\">Title:</label>\n                <div className=\"form_controls\">\n                  <input\n                    type=\"text\"\n                    ref={(titleEl) => (this.titleEl = titleEl)}\n                    className=\"form-control\"\n                    placeholder=\"Title\"\n                  />\n                </div>\n              </div>\n              <div className=\"form_line\">\n                <label>Image:</label>\n                <div className=\"form_controls\">\n                  <div className=\"upload_button_holder\">\n                    <label className=\"upload_button\" htmlFor=\"fileupload\">\n                      Upload\n                    </label>\n                    <input\n                      type=\"file\"\n                      id=\"fileupload\"\n                      accept=\"image/*\"\n                      multiple=\"multiple\"\n                      ref={(fileInputEl) => (this.fileInputEl = fileInputEl)}\n                      onChange={() =>\n                        this.onPhotoSelected(this.fileInputEl.files)\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n            </form>\n            <h2>Status</h2>\n          </div>\n          {this.props.uploadedPhotos.map((uploadedPhoto, index) => {\n            return (\n              <UploadedPhotoStatusContainer\n                key={index}\n                uploadedPhoto={uploadedPhoto}\n              />\n            );\n          })}\n        </Dropzone>\n\n        <NavLink className=\"back_link\" exact to=\"/photos\">\n          Back to list\n        </NavLink>\n      </div>\n    );\n  }\n\n  onPhotoSelected(files) {\n    const url = `https://api.cloudinary.com/v1_1/${this.context.cloudName}/upload`;\n    const title = this.titleEl.value;\n\n    for (let file of files) {\n      const photoId = this.photoId++;\n      const fileName = file.name;\n      request\n        .post(url)\n        .field(\"upload_preset\", this.context.uploadPreset)\n        .field(\"file\", file)\n        .field(\"multiple\", true)\n        .field(\"tags\", title ? `myphotoalbum,${title}` : \"myphotoalbum\")\n        .field(\"context\", title ? `photo=${title}` : \"\")\n        .on(\"progress\", (progress) =>\n          this.onPhotoUploadProgress(photoId, file.name, progress)\n        )\n        .end((error, response) => {\n          this.onPhotoUploaded(photoId, fileName, response);\n        });\n    }\n  }\n\n  onPhotoUploadProgress(id, fileName, progress) {\n    this.props.onUpdateUploadedPhoto({\n      id: id,\n      fileName: fileName,\n      progress: progress,\n    });\n  }\n\n  onPhotoUploaded(id, fileName, response) {\n    this.props.onUpdateUploadedPhoto({\n      id: id,\n      fileName: fileName,\n      response: response,\n    });\n\n    this.props.onPhotosUploaded([response.body]);\n  }\n\n  static contextType = CloudinaryContext.contextType;\n}\n\nPhotosUploader.propTypes = {\n  uploadedPhotos: PropTypes.array,\n  onUpdateUploadedPhoto: PropTypes.func,\n  onPhotosUploaded: PropTypes.func,\n};\n\nconst PhotosUploaderContainer = connect((state) => state, {\n  onUpdateUploadedPhoto: updateUploadedPhoto,\n  onPhotosUploaded: photosUploaded,\n})(PhotosUploader);\n\nexport default PhotosUploaderContainer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { CloudinaryContext } from \"cloudinary-react\";\nimport { photosFetched } from \"../../actions\";\nimport PhotoListContainer from \"./PhotoList\";\nimport PhotosUploaderContainer from \"./PhotosUploader\";\nimport { fetchPhotos } from \"../../utils/CloudinaryService\";\nimport \"./styles.css\";\nimport \"../../App.css\";\n\nclass App extends Component {\n  componentDidMount() {\n    fetchPhotos(this.props.cloudName).then(this.props.onPhotosFetched);\n  }\n\n  render() {\n    return (\n      <CloudinaryContext\n        cloudName={this.props.cloudName}\n        uploadPreset={this.props.uploadPreset}\n      >\n        <BrowserRouter>\n          <Switch className=\"router\">\n            <Route exact path=\"/photo\" component={PhotoListContainer} />\n            <Route\n              exact\n              path=\"/photos/new\"\n              component={PhotosUploaderContainer}\n            />\n            <Redirect from=\"/\" to=\"/photo\" />\n          </Switch>\n        </BrowserRouter>\n      </CloudinaryContext>\n    );\n  }\n}\n\nApp.propTypes = {\n  cloudName: PropTypes.string,\n  uploadPreset: PropTypes.string,\n  onPhotosFetched: PropTypes.func,\n};\n\nconst AppContainer = connect(null, { onPhotosFetched: photosFetched })(App);\n\nexport default AppContainer;\n","export default __webpack_public_path__ + \"static/media/street.b2f66f92.jpg\";","export default __webpack_public_path__ + \"static/media/crowd.2266fb09.jpg\";","export default __webpack_public_path__ + \"static/media/field.b03ff97e.jpg\";","export default __webpack_public_path__ + \"static/media/donkey.dffc9813.jpg\";","import React from \"react\";\nimport \"./styles.css\";\nimport pic1 from \"./crowd.jpg\";\nimport pic2 from \"./field.jpg\";\nimport pic3 from \"./donkey.jpg\";\nimport pic4 from \"./street.jpg\";\n\nconst Home = () => {\n  //   const album = [pic1, pic2, pic3, pic4];\n  //   const contain = document.getElementById(\"frame\");\n\n  // function getRandomImage() {\n  //   var num = Math.floor(Math.random() * album.length);\n  //   var img = album[num];\n  //   contain.innerHTML = '<img src=\"' + img + '\">';\n  // }\n  // getRandomImage();\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        Photo Drop!\n        <span>share, comment, inspire</span>\n      </div>\n      <div id=\"frame\">\n        <img src={pic4} />\n      </div>\n    </div>\n    // <div id=\"main\">\n    //   <div class=\"row text-center\" id=\"main-row\">\n    //     <img\n    //       src=\"https://images.unsplash.com/photo-1471584363844-b3909b58d6f7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3648&q=80\"\n    //       class=\"img-fluid\"\n    //       id=\"random-pic\"\n    //       alt=\"...\"\n    //     ></img>\n\n    //     <div class=\"jumbotron\">\n    //       <h1 class=\"display-4\" id=\"main-header\">\n    //         Photo Drop!{\" \"}\n    //       </h1>\n    //       <p class=\"lead\" id=\"intro\">\n    //         Sign In in order to Search and Upload imanges\n    //       </p>\n    //       <p class=\"lead\" id=\"intro-sub\">\n    //         <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\n    //           Maybe this can be another login button or maybe\n    //         </a>\n    //       </p>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst Footer = () => (\n    <div className=\"footer\">\n        <p>Help make this page better!</p>\n       <button><Link to={\"/Payment\"}>Donate Now!</Link></button>\n    </div>\n);\n\nexport default Footer;","import React from 'react';\nimport {loadStripe} from '@stripe/stripe-js';\nimport {CardElement, Elements, ElementsConsumer} from '@stripe/react-stripe-js';\n\n\nclass CheckoutForm extends React.Component {\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n\n    const {stripe, elements} = this.props;\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n\n    const card = elements.getElement(CardElement);\n\n    if (card == null) {\n      return;\n    }\n\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card,\n    });\n\n    if (error) {\n      console.log('[error]', error);\n    } else {\n      console.log('[PaymentMethod]', paymentMethod);\n    }\n  };\n\n  render() {\n    const {stripe} = this.props;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <CardElement\n          options={{\n            style: {\n              base: {\n                fontSize: '16px',\n                color: '#424770',\n                '::placeholder': {\n                  color: '#aab7c4',\n                },\n              },\n              invalid: {\n                color: '#9e2146',\n              },\n            },\n          }}\n        />\n        <button type=\"submit\" disabled={!stripe}>\n          Pay\n        </button>\n      </form>\n    );\n  }\n}\n// payment is disabled so that people can't actually pay us //\n\nconst InjectedCheckoutForm = () => {\n  return (\n    <ElementsConsumer>\n      {({elements, stripe}) => (\n        <CheckoutForm elements={elements} stripe={stripe} />\n      )}\n    </ElementsConsumer>\n  );\n};\n\n\nconst stripePromise = loadStripe('pk_test_51JGER2DX5T2VcWxZlaxbjVHhFvlC9PqhbMTPBzIJ1bIMM1SAbGP3776GHa7FuJMpNO7r1NRK0yjtX6KgJ5Yvx7Jj00bxolZjQd');\n\nconst Payment = () => {\n  return (\n    <Elements stripe={stripePromise}>\n      <InjectedCheckoutForm />\n    </Elements>\n  );\n};\n\nexport default Payment;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\nimport SearchPhotos from './pages/SearchPhotos';\nimport SavedPhotos from './pages/SavedPhotos';\nimport Navbar from './components/Navbar';\nimport {setContext} from '@apollo/client/link/context'\n\n\nimport config from \"./config/config\";\n\nimport React  from \"react\";\nimport Profile from \"../src/pages/profile/profile.js\";\nimport Home from \"../src/pages/home/home\";\nimport Footer from './components/footer';\nimport Payment from './components/Payment'\nimport \"./App.css\";\n\n\n\n\n\nconst { cloud_name, upload_preset } = config;\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\n\nconst authLink = setContext((_, {headers}) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n})\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nconsole.log(client)\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/search' component={SearchPhotos} />\n            <Route exact path='/saved' component={SavedPhotos} />\n            <Route exact path ='/profile'> <Profile cloudName={cloud_name} uploadPreset={upload_preset} />\n            </Route>\n            <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n          </Switch>\n          <Footer/>\n          <Switch>\n            <Route exact path ='/Payment' component={Payment} />\n\n    </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","// import React from \"react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport PhotosListReducer from \"./reducers/PhotosListReducer\";\nimport UploadedPhotosReducer from \"./reducers/UploadedPhotosReducer\";\nimport APP from './App'\n\nconst rootReducer = combineReducers({\n  photos: PhotosListReducer,\n  uploadedPhotos: UploadedPhotosReducer,\n});\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <APP/>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}